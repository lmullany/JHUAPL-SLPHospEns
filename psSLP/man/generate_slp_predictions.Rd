% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ensemble_functions.R
\name{generate_slp_predictions}
\alias{generate_slp_predictions}
\title{Generate simulated linear pooling predictions}
\usage{
generate_slp_predictions(
  x,
  qp_var,
  p_var,
  byvars = NULL,
  draw_size = 1000,
  parallel = c("auto", "on", "off"),
  threads = NULL,
  verbose = T,
  model_configuration = list(type = "gam", gam_con = list(family = "gaussian", k = 10)),
  unif_range = c(0, 1),
  fixed_unif = F
)
}
\arguments{
\item{x}{This is the data frame/data.table that contains the \code{p_var} and \code{qp_var} and any
grouping variables \code{byvars} (i.e. defining set of quantile functions).}

\item{qp_var}{This is the name of the variable that holds the estimate of the number
of hospitalizations.}

\item{p_var}{This is the name of the variable that holds the probability, p}

\item{byvars}{(default = NULL), a character vector indicating
the grouping variables. Each unique group should represent a single quantile function (Q(p))}

\item{draw_size}{(default=1000), an integer value of the number of simulated forecasts to
make for each quantile function set}

\item{threads}{default NULL, set integer number of threads to use for parallel processing}

\item{verbose}{(default = TRUE) a boolean indicator to show verbose status updates during calculation}

\item{parallel:}{string value either "auto","on","off". By default, the function will run in parallel
using half the available threads if the number of gam models to estimates exceeds 1000 (this is "auto")
mode. Setting this to "on" ("off") will force parallel processing on ("off") regardless of gam models}

\item{model_configuration;}{provide a nested list of additional parameters to the model. Currently, the
default list has \code{type="gam"}, and \code{gam_con = list(family="gaussian", k=10)}. However, to run an linear
interpolation, change the type to \code{lin_interp}.}

\item{unif_range:}{numeric vector of length 2 restricting the range of the random uniform variates. The default
is \code{c(0,1)}, but if linear interpolotion method is being used, it would be wise to change the this to \code{c(min,max)},
where \code{min} is the minimum available value in \code{p_var} (i.e. the lowest quantile), and \code{max} is the maximum
value in \code{p_var}.}

\item{fixed_unif:}{default FALSE, if set to TRUE this will ensure that the same set of uniform variates will be
drawn for each run of the estimation function; rather than pulling \code{runif(draw_size, unif_range[0], unif_range[1])},
this option will pull  \code{seq(unif_range[0], unif_range[1], length.out=draw_size)}}
}
\value{
Returns a data table of predictions (size=\code{draw_size}) for each grouping variable defined via \code{byvars}
}
\description{
This function simulates a set of simulated outputs, given quantile function. Provide a data
frame \code{x} that has at least two columns, the quantile probability (p) and the threshold value
Q(p); indicating these as the \code{p_var} and the \code{qp_var}.  If you have more than one
quantile function set, then indicate the variables that identify these sets in
\code{byvars})
}
\examples{
generate_slp_predictions(hosp=my_hosp_data, target_variable="value",draw_size=500, byvars=c("location,"source","date))
}
